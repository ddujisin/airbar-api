generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String        @id @default(uuid())
  email        String        @unique
  password     String
  role         String        @default("ADMIN")
  isSuperAdmin Boolean       @default(false)
  name         String?
  phone        String?
  address      String?
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  orders       Order[]
  sessions     Session[]
  reservations Reservation[]
  guests       Guest[]
  items        Item[]
}

model Session {
  id          String   @id @default(uuid())
  userId      String
  accessToken String   @unique
  expiresAt   DateTime
  createdAt   DateTime @default(now())
  user        User     @relation(fields: [userId], references: [id])
}

model Item {
  id          String   @id @default(uuid())
  name        String
  description String?
  price       Float
  qrCode      String?
  hostId      String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  host        User     @relation(fields: [hostId], references: [id])
  orders      Order[]
}

model Guest {
  id           String        @id @default(uuid())
  name         String
  email        String
  hostId       String
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  host         User          @relation(fields: [hostId], references: [id])
  reservations Reservation[]
}

model Reservation {
  id         String   @id @default(uuid())
  startDate  DateTime
  endDate    DateTime
  pinCode    String
  hostId     String
  guestId    String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  host       User     @relation(fields: [hostId], references: [id])
  guest      Guest    @relation(fields: [guestId], references: [id])
  orders     Order[]
}

model Order {
  id            String      @id @default(uuid())
  quantity      Int
  totalPrice    Float
  status        String      @default("pending")
  hostId        String
  itemId        String
  reservationId String
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  host          User        @relation(fields: [hostId], references: [id])
  item          Item        @relation(fields: [itemId], references: [id])
  reservation   Reservation @relation(fields: [reservationId], references: [id])
}
